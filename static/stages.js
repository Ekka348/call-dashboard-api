let autoRefresh = true;
let refreshInterval;

function showLoading(message = "–ó–∞–≥—Ä—É–∑–∫–∞...") {
  document.getElementById("spinner").style.display = "inline";
  document.getElementById("status").style.color = "gray";
  document.getElementById("status").innerText = `üåÄ ${message}`;
}

function hideLoading(success = true) {
  const now = new Date().toLocaleTimeString();
  document.getElementById("spinner").style.display = "none";
  document.getElementById("status").style.color = success ? "#28a745" : "red";
  document.getElementById("status").innerText = success
    ? `‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${now} ‚Äî —É—Å–ø–µ—à–Ω–æ`
    : `‚ùå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å`;
}

async function loadStatsFor(stage, targetId) {
  try {
    const range = document.getElementById("range").value;
    const res = await fetch(`/stats_data?label=${encodeURIComponent(stage)}&range=${range}`);
    const data = await res.json();
    renderMiniTable(data, targetId);
  } catch {
    document.getElementById(targetId).innerHTML = `<p>‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è —Å—Ç–∞–¥–∏–∏ "${stage}"</p>`;
  }
}

function renderMiniTable(data, targetId) {
  const sorted = [];
  for (let i = 0; i < data.labels.length; i++) {
    sorted.push({ name: data.labels[i], count: data.values[i] });
  }
  sorted.sort((a, b) => b.count - a.count);

  let html = `<h4>üìã ${data.stage}</h4>`;
  html += `<p>–í—Å–µ–≥–æ –ª–∏–¥–æ–≤: ${data.total}</p><table><tr><th>–°–æ—Ç—Ä—É–¥–Ω–∏–∫</th><th>–õ–∏–¥–æ–≤</th></tr>`;
  for (const row of sorted) {
    html += `<tr><td>${row.name}</td><td>${row.count}</td></tr>`;
  }
  html += `</table>`;
  document.getElementById(targetId).innerHTML = html;
}

function updateAllStages() {
  showLoading("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —Å—Ç–∞–¥–∏–∏...");
  loadStatsFor("–ù–î–ó", "report_ndz");
  loadStatsFor("–ù–î–ó 2", "report_ndz2");
  loadStatsFor("–ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç—å", "report_call");
  loadStatsFor("–ü—Ä–∏–≥–ª–∞—à–µ–Ω –∫ —Ä–µ–∫—Ä—É—Ç–µ—Ä—É", "report_recruiter");
  hideLoading(true);
}

function toggleAutoRefresh() {
  autoRefresh = !autoRefresh;
  document.getElementById("autostatus").innerText = autoRefresh ? "–í–ö–õ" : "–í–´–ö–õ";
  if (!autoRefresh) clearInterval(refreshInterval);
  else startAutoRefresh();
}

function startAutoRefresh() {
  refreshInterval = setInterval(updateAllStages, 120000);
}

window.onload = () => {
  updateAllStages();
  startAutoRefresh();
};
